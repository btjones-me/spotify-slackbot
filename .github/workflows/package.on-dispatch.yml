name: Publish Python from Workflow Dispatch
# Publishes a Python Package with a specified git tag to Azure DevOps, and creates a release

on:
  workflow_dispatch:
    inputs:
      poetry-version:
        description: 'Version to bump. Can be major, minor, patch, prerelease or a valid semver string.'
        required: true
        default: 'prerelease'
      description-body:
        description: ''
        required: false
        default: ''

jobs:
  deploy-tag:
    runs-on: ubuntu-latest
    environment: PyPiRepoUploadToken

    steps:
    - uses: actions/checkout@v2

    - name: Set up Python 3.8
      uses: actions/setup-python@v2
      with:
        python-version: 3.8

    - name: Get full Python version
      id: full-python-version
      run: |
        echo ::set-output name=version::$(python -c "import sys; print('-'.join(str(v) for v in sys.version_info))")

    - name: Install Dependencies
      run: |
        sudo snap install dotnet-sdk --classic
        sudo snap alias dotnet-sdk.dotnet dotnet
        sudo add-apt-repository -y ppa:ubuntugis/ppa
        sudo apt-get update
        sudo apt-get install -y --no-install-recommends libreadline-gplv2-dev libncursesw5-dev libssl-dev libsqlite3-dev tk-dev libgdbm-dev libc6-dev libbz2-dev
        sudo apt-get install -y --no-install-recommends libffi-dev
        sudo apt-get install -y --no-install-recommends lzma liblzma-dev
        sudo apt-get install -y --no-install-recommends libgeos-dev libgeos++-dev
        sudo apt-get install -y --no-install-recommends libproj-dev proj-data proj-bin
        sudo apt-get install -y --no-install-recommends libsnappy-dev
        sudo apt-get install -y --no-install-recommends python3-h5py
        python -m pip install --upgrade pip poetry

    - name: Create git tag
      run : |
        git tag $(poetry version --short)
        git push origin $(poetry version --short)

    - name: Publish to package repository
      env:
        DOTNET_ROOT: /snap/dotnet-sdk/current
        POETRY_PYPI_TOKEN_: ${{ secrets.UPLOAD_PAT }} 
      run: |
        make release

    - name: Get previous tag
      id: previoustag
      uses: "WyriHaximus/github-action-get-previous-tag@v1"

    - name: Create Release
      id: create_release
      uses: actions/create-release@v1
      continue-on-error: true
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }} 
      with:
        tag_name: ${{ steps.previoustag.outputs.tag }} 
        release_name: ${{ steps.previoustag.outputs.tag }} 
        draft: false
        prerelease: false
        body: ${{ github.event.inputs.description-body }} 

    - name: Commit and push pyproject.toml version bump
      uses: EndBug/add-and-commit@v7
      with:
        add: 'pyproject.toml'
        message: 'Committing pyproject.toml version bump to  ${{ steps.previoustag.outputs.tag }} '
        push: true
